#N canvas 647 27 1864 1019 12;
#X obj 810 814 cnn2d;
#X msg 960 392 create;
#X text 1012 390 cria todas as matrizes da rede a partir dos parâmetros passados, f 64;
#X obj 977 432 tgl 19 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X msg 977 459 symmetry \$1;
#X text 385 65 Padding das camadas de decoder;
#X text 151 167 linhas e colunas dos kernles do decoder;
#X text 84 363 dimensões de stride das camadas do decoder;
#X text 1068 452 modo de simetria do encoder e decoder: 0 = OFF \, 1 = ON (default = 1);
#X text 1279 507 lista de funções de ativação de cada camada da rede: encoder + decoder (default = relu para todas camadas), f 72;
#X text 857 36 nº de camadas: simetria = 0 \, 1 valor - simetria = 1 \, 2 valores (default = 2), f 63;
#X text 918 99 dimensões da matriz de dados - rows and colunns (default = 8 8), f 63;
#X text 946 128 padding para cada camada: 0 = valid \, < 0 = same (default = 1 1), f 64;
#X text 1031 187 linhas e colunas dos kernels de cada camada (default = 2 2 2 2), f 63;
#X text 1092 244 dimensões do stride da convolução para cada camada (default = 1 1 1 1), f 70;
#X text 1098 290 dimensões da janel de pooling de cada camada (default = 2 2 2 2), f 64;
#X text 1122 330 dimensões do stride de pooling para cada camada (default = 1 1 1 1), f 68;
#X text 1173 560 lista de método de pooling de cada camada do encoder (default = max para todas camadas do encoder);
#X msg 1019 600 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16;
#X text 1346 600 dados de entrada da rede (matriz achatada): esse vetor será transformado em matriz antes da propagação (convolução -> ativação -> pooling -> convolução transposta);
#X msg 1003 635 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32;
#X msg 386 362 decoderStride 1 1 1 1;
#X msg 430 167 decoderKernels 2 2 2 2;
#X msg 1056 700 training \$1;
#X obj 1056 676 tgl 19 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X msg 1051 753 evaluation \$1;
#X obj 1052 729 tgl 19 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X text 1148 699 traning mode: 0 = OFF \, 1 = ON (default = ON);
#X text 1153 754 evaluation mode: 0 = OFF \, 1 = ON (default = ON);
#X text 116 682 number of trainging examples;
#X text 227 602 max epochs;
#X text 132 426 optimizer: sgd = stochastic gradient descent \, adam = adaptative momentum, f 27;
#X obj 101 181 bng 19 250 50 0 empty empty empty 0 -10 0 12 #00ff04 #000000 #000000;
#N canvas 1144 37 1158 846 dataset 0;
#X obj 63 311 text get \$0-dataset;
#X obj 63 277 t f b;
#X obj 62 129 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 246 234 text size \$0-dataset;
#X obj 63 349 outlet;
#X obj 62 96 inlet;
#X obj 247 295 s datasize;
#X obj 518 378 text define \$0-dataset;
#X obj 484 148 openpanel;
#X obj 484 173 t a b;
#X obj 484 202 pack s f;
#X msg 484 229 read \$1;
#X obj 451 104 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 452 126 t b b;
#X obj 326 55 r read-text;
#X obj 326 79 t b a;
#X obj 637 204 t a b;
#X obj 637 233 pack s f;
#X obj 637 131 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X msg 637 260 write \$1;
#X obj 637 179 savepanel;
#X obj 559 349 r clear-text;
#X obj 451 82 r load;
#X obj 637 107 r save;
#X obj 270 264 print size;
#X obj 484 285 t b a;
#X obj 454 555 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 409 402 loadbang;
#X obj 409 630 print loaded;
#X msg 409 607 training dataset;
#X msg 469 447 clear;
#X obj 409 424 t b b b b;
#X obj 20 407 list split 6;
#X obj 219 653 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000;
#X obj 178 719 print loaded;
#X msg 238 550 clear;
#X obj 178 527 t b b b b;
#X msg 178 696 test dataset;
#X obj 178 496 r test;
#X obj 409 366 r training;
#X obj 62 180 until;
#X obj 62 218 f;
#X obj 100 211 + 1;
#X obj 155 207 sel 0;
#X obj 100 237 mod 60;
#X obj 9 179 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X msg 745 450 datasize 40;
#X floatatom 9 267 5 0 0 0 - - - 0;
#X msg 728 681 read data/ricochet_trill_train_6feat.txt;
#X msg 508 799 read data/ricochet_trill_test_6feat.txt;
#X msg 455 574 read data/train_matrix.txt;
#X msg 218 671 read data/test_matrix.txt;
#X msg 143 131 0;
#X connect 0 0 32 0;
#X connect 0 0 4 0;
#X connect 1 0 0 0;
#X connect 2 0 40 0;
#X connect 3 0 6 0;
#X connect 3 0 24 0;
#X connect 3 0 44 1;
#X connect 5 0 2 0;
#X connect 8 0 9 0;
#X connect 9 0 10 0;
#X connect 10 0 11 0;
#X connect 11 0 25 0;
#X connect 12 0 13 0;
#X connect 13 1 8 0;
#X connect 14 0 15 0;
#X connect 15 0 3 0;
#X connect 15 1 7 0;
#X connect 16 0 17 0;
#X connect 17 0 19 0;
#X connect 18 0 20 0;
#X connect 19 0 7 0;
#X connect 20 0 16 0;
#X connect 21 0 7 0;
#X connect 22 0 12 0;
#X connect 23 0 18 0;
#X connect 25 0 3 0;
#X connect 25 1 7 0;
#X connect 26 0 50 0;
#X connect 27 0 31 0;
#X connect 29 0 28 0;
#X connect 30 0 7 0;
#X connect 31 0 29 0;
#X connect 31 1 3 0;
#X connect 31 2 26 0;
#X connect 31 3 30 0;
#X connect 33 0 51 0;
#X connect 35 0 7 0;
#X connect 36 0 37 0;
#X connect 36 1 3 0;
#X connect 36 2 33 0;
#X connect 36 3 35 0;
#X connect 37 0 34 0;
#X connect 38 0 36 0;
#X connect 39 0 31 0;
#X connect 40 0 41 0;
#X connect 41 0 42 0;
#X connect 41 0 1 0;
#X connect 41 0 47 0;
#X connect 42 0 44 0;
#X connect 43 0 40 1;
#X connect 44 0 41 1;
#X connect 44 0 43 0;
#X connect 45 0 41 0;
#X connect 50 0 7 0;
#X connect 51 0 7 0;
#X connect 52 0 41 1;
#X restore 212 252 pd dataset;
#X obj 121 287 print;
#X obj 144 53 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 143 75 s test;
#X obj 53 54 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 54 75 s training;
#X obj 230 631 r datasize;
#X msg 318 681 datasize \$1;
#X floatatom 231 653 5 0 0 0 - - - 0;
#X msg 281 783 he;
#X msg 272 828 xavier;
#X text 50 744 learning rate (default = 0.001);
#X text 39 861 random state (default = 42);
#X msg 327 437 optimizer sgd;
#X msg 278 745 learning 0.001;
#X obj 212 225 until;
#X msg 310 602 epochs 20;
#X msg 212 203 20;
#X msg 324 529 loss mse;
#X text 82 518 loss function: mse = mean square error \, mae = mean absolut error \, bce = binary crossentropy (default = mse), f 33;
#X msg 808 100 inputsize 5 5;
#X msg 673 912 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25, f 67;
#X msg 239 860 randomstate 32;
#X msg 930 291 poolingwin 2 2 2 2;
#X msg 959 330 poolstride 1 1 1 1;
#X msg 1014 563 poolingMethod max max;
#X msg 913 188 kernels 2 2 2 2;
#X msg 923 244 convstride 1 1 1 1;
#X msg 844 131 padding 1 1;
#X msg 776 35 layers 2 2;
#X msg 602 66 decoderPadding 0 1;
#X msg 993 512 activation tanh linear relu linear;
#X connect 1 0 0 0;
#X connect 3 0 4 0;
#X connect 4 0 0 0;
#X connect 18 0 0 0;
#X connect 20 0 0 0;
#X connect 21 0 0 0;
#X connect 22 0 0 0;
#X connect 23 0 0 0;
#X connect 24 0 23 0;
#X connect 25 0 0 0;
#X connect 26 0 25 0;
#X connect 33 0 0 0;
#X connect 35 0 36 0;
#X connect 37 0 38 0;
#X connect 39 0 41 0;
#X connect 40 0 0 0;
#X connect 41 0 40 0;
#X connect 42 0 0 0;
#X connect 43 0 0 0;
#X connect 46 0 0 0;
#X connect 47 0 0 0;
#X connect 48 0 33 0;
#X connect 49 0 0 0;
#X connect 50 0 48 0;
#X connect 51 0 0 0;
#X connect 53 0 0 0;
#X connect 54 0 0 0;
#X connect 55 0 0 0;
#X connect 56 0 0 0;
#X connect 57 0 0 0;
#X connect 58 0 0 0;
#X connect 59 0 0 0;
#X connect 60 0 0 0;
#X connect 61 0 0 0;
#X connect 62 0 0 0;
#X connect 63 0 0 0;
#X connect 64 0 0 0;
